<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="SingleCarrierMode" Id="{932b8545-d89d-46a8-8a71-7d229764fd43}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM SingleCarrierMode
VAR_INPUT
		TopPositionNew:LREAL:=100;
	TopVelocityNew:LREAL:=0.5;
	btn_TopMove:BOOL;
	btn_TopStop:BOOL;
	BottomPositionNew:LREAL:=100;
	BottomVelocityNew:LREAL:=0.5;
	btn_BottomMove:BOOL;
	btn_BottomStop:BOOL;
	InPositionNew:LREAL:=100;
	InVelocityNew:LREAL:=0.5;
	btn_InMove:BOOL;
	btn_InStop:BOOL;
	OutPositionNew:LREAL:=100;
	OutVelocityNew:LREAL:=0.5;
	btn_OutMove:BOOL;
	btn_OutStop:BOOL;
END_VAR
VAR
	(*key Command*)

	(*Var*)
	fb_ton1:TON;
	fb_ton2:TON;
	fb_ton3:TON;
	fb_ton4:TON;
	fb_ton5:TON;
	fb_ton6:TON;
	(*Status*)
	State:DINT;
	Busy:BOOL;
	TopBusy:BOOL;
	BottomBusy:BOOL;
	InBusy:BOOL;
	OutBusy:BOOL;
	InitDone:BOOL;
	tm_state: DINT;
	ts_state: DINT;
	bm_state: DINT;
	bs_state: DINT;
	im_state: DINT;
	is_state: DINT;
	om_state: DINT;
	os_state: DINT;
	moni_State:DINT;
	(*PowerOff*)
	d_state: DINT;
	(*¼ì²âµ½ÏÞÎ»£¬»Ö¸´Move×´Ì¬*)
	FTrig_ReachLS: F_TRIG;
	FTrig_btn_GapMove: F_TRIG;
	InitPowerDone:BOOL;
	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[TopPositionActual:=(Pos_LeftTopLin+Pos_RightTopLin)/2;
TopVelocityActual:=(Velo_LeftTopLin+Velo_RightTopLin)/2;
BottomPositionActual:=(Pos_LeftBottomLin+Pos_RightBOttomLin)/2;
BottomVelocityActual:=(Velo_LeftBottomLin+Velo_RightBOttomLin)/2;
InPositionActual:=(Pos_LeftInLin+Pos_RightInLin)/2;
InVelocityActual:=(Velo_LeftInLin+Velo_RightInLin)/2;
OutPositionActual:=(Pos_LeftOutLin+Pos_RightOutLin)/2;
OutVelocityActual:=(Velo_LeftOutLin+Velo_RightOutLin)/2;
(*btn_Power On/Off*)
IF btn_Power AND st_Power=0 THEN
	btn_PowerOn:=TRUE;
	btn_Power:=FALSE;
END_IF
IF btn_Power AND st_Power=1 THEN
	btn_PowerOff:=TRUE;
	btn_Power:=FALSE;
END_IF
IF btn_PowerOn THEN
	A_PowerOn();
END_IF
IF btn_PowerOff THEN
	A_PowerOff();
END_IF

(*************************Monitor All Carrirt Position*****************)
A_MonitoringAllAxis();
(*******************MOVE AND STOP*********************)
A_SingleCarrierMove();
A_SingleCarrierStop();
(**************ÏÞÎ»Åö´¥×´Ì¬»Ö¸´*******************************)
FTrig_ReachLS(CLK:=Unreach_LS_Far AND Unreach_LS_Near);
IF FTrig_ReachLS.Q THEN		(*FTrig_ReachLS.QÌ«¿ì£¬Ö»ÄÜÊ¹btn_TopStopÎªTRUE*)
	btn_TopStop:=TRUE;
	btn_BottomStop:=TRUE;
END_IF
IF btn_TopStop THEN			(*Òò´Ë£¬´Ë´¦Îªµ±Ö®Ç°btn_TopStopÎªTRUEÊ±£¬ÈËÎªÈÃbtn_BottomStopÎªTRUE*)
	btn_BottomStop:=TRUE;
END_IF]]></ST>
    </Implementation>
    <Action Name="A_MonitoringAllAxis" Id="{eb43239b-219b-4196-a91d-cc3c414c514e}">
      <Implementation>
        <ST><![CDATA[IF  st_Power<>0 THEN
		Diff_TopPos_actual:=Pos_leftTopLin-Pos_RightTopLin;
		Diff_TopVelo_actual:=Velo_leftTopLin-Velo_RightTopLin;
IF ABS(Pos_leftTopLin-Pos_RightTopLin)>Threshold_TopPos_SingleCarrier THEN
		btn_TopStop:=TRUE;
		btn_BottomStop:=TRUE;
		FB_PlcEmergencyStop();
		Error:=TRUE;
		ErrorID:=14;
		LED_Error:=TRUE;
ELSIF ABS(Velo_leftTopLin-Velo_RightTopLin)>Threshold_TopVelo_SingleCarrier  THEN
		(*btn_TopStop:=TRUE;
		btn_BottomStop:=TRUE;
		FB_PlcEmergencyStop();*)
		Error:=TRUE;
		ErrorID:=15;
(*Bottom Î»ÖÃºÍËÙ¶È±È¶Ô*)
ELSIF ABS(Pos_LeftBottomLin-Pos_RightBottomLin)>Threshold_BottomPos_SingleCarrier THEN
		btn_TopStop:=TRUE;
		btn_BottomStop:=TRUE;
		FB_PlcEmergencyStop();
		Error:=TRUE;
		ErrorID:=16;
		LED_Error:=TRUE;
ELSIF ABS(Velo_leftBottomLin-Velo_RightBottomLin)>Threshold_BottomVelo_SingleCarrier  THEN
		(*btn_TopStop:=TRUE;
		btn_BottomStop:=TRUE;
		FB_PlcEmergencyStop();*)
		Error:=TRUE;
		ErrorID:=17;
(*ÎÞLeftºÍRightËÙ¶ÈÎ»ÖÃµÄ¶Ô±È*)
END_IF
END_IF
IF  st_Power<>0 THEN
		Diff_InPos_actual:=Pos_leftInLin-Pos_RightInLin;
		Diff_InVelo_actual:=Velo_leftInLin-Velo_RightInLin;
IF ABS(Pos_leftInLin-Pos_RightInLin)>Threshold_InPos_SingleCarrier THEN
		btn_InStop:=TRUE;
		btn_OutStop:=TRUE;
		FB_PlcEmergencyStop();
		Error:=TRUE;
		ErrorID:=18;
		LED_Error:=TRUE;
ELSIF ABS(Velo_leftInLin-Velo_RightInLin)>Threshold_InVelo_SingleCarrier  THEN
		(*btn_InStop:=TRUE;
		btn_OutStop:=TRUE;
		FB_PlcEmergencyStop();*)
		Error:=TRUE;
		ErrorID:=19;
(*Out Î»ÖÃºÍËÙ¶È±È¶Ô*)
ELSIF ABS(Pos_LeftOutLin-Pos_RightOutLin)>Threshold_OutPos_SingleCarrier THEN
		btn_InStop:=TRUE;
		btn_OutStop:=TRUE;
		FB_PlcEmergencyStop();
		Error:=TRUE;
		ErrorID:=20;
		LED_Error:=TRUE;
ELSIF ABS(Velo_leftOutLin-Velo_RightOutLin)>Threshold_OutVelo_SingleCarrier  THEN
		(*btn_InStop:=TRUE;
		btn_OutStop:=TRUE;
		FB_PlcEmergencyStop();*)
		Error:=TRUE;
		ErrorID:=21;
(*ÎÞLeftºÍRightËÙ¶ÈÎ»ÖÃµÄ¶Ô±È*)
END_IF
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_PowerOff" Id="{3f10ae79-5a18-4a8f-8e8f-36886ee92bba}">
      <Implementation>
        <ST><![CDATA[CASE d_state OF
		0:(*PowerOff*)
			FB_Power(Off:=TRUE);
				d_state:=1;
		1:
			IF NOT FB_power.OffStatus THEN
				d_state:=1;
			ELSE
				d_state:=88;
			END_IF
		88:(*ResetAllState*)
			btn_PowerOn:=FALSE;
			btn_TopMove:=FALSE;
			btn_TopStop:=FALSE;
			btn_BottomMove:=FALSE;
			btn_BottomStop:=FALSE;
			fb_ton1.IN:=FALSE;
			fb_ton2.IN:=FALSE;
			fb_ton3.IN:=FALSE;
			State:=0;
			Busy:=FALSE;
			InitPowerDone:=FALSE;
			Error:=FALSE;
			ErrorID:=0;
			tm_state:=0;
			ts_state:=0;
			bm_state:=0;
			bs_state:=0;
			btn_PowerOff:=FALSE;
			d_state:=0;
			Led_Run:=FALSE;
			Led_Error:=FALSE;
			moni_State:=0;
END_CASE
]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_PowerOn" Id="{e5af3f24-1d66-4117-95bc-015645fa564d}">
      <Implementation>
        <ST><![CDATA[fb_ton3(PT:=T#0.5S);
CASE State OF
	0:	(*FB_Power_On*)
		FB_Power(On:=TRUE);
		fb_ton3.IN:=TRUE;
		State:=1;
	1:	(*wait*)
		FB_power();
		IF NOT FB_power.OnStatus THEN		(*FB_Power_OnÃ»ÓÐÖ´ÐÐÍê£¬wait£¬³¬Ê±FB Error*)
			IF NOT fb_ton3.Q THEN
				State:=1;
			ELSE
				ErrorID:=1;
				State:=99;
			END_IF
		ELSE
			State:=88;
		END_IF
	88:	(*All Done*)
		btn_PowerOn:=FALSE;
		State:=0;
		Error:=FALSE;
		ErrorID:=0;
		Busy:=FALSE;
		InitPowerDone:=TRUE;
		FB_power.On:=FALSE;
		fb_ton3.IN:=FALSE;
		LED_Error:=FALSE;
	99:
		Error:=TRUE;
		//ErrorID:=701;
		//ErrorDescription:='power on error';		
		btn_PowerOn:=FALSE;
		State:=99;
		Busy:=FALSE;
		InitPowerDone:=FALSE;
		fb_ton3.IN:=FALSE;
		LED_Error:=TRUE;
END_CASE]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_SingleCarrierMove" Id="{439b8bd9-efb5-4793-8e6b-237eac7f3b44}">
      <Implementation>
        <ST><![CDATA[(*********************************************************************btn_TopMove*****************************************************************)
IF btn_TopMove THEN
		TopBusy:=TRUE;
		CASE tm_state OF
			0:
				FB_Move_Top.Mode:=1;						(*单梁模式*)
				FB_Move_Top.CoupleState:=st_Couple;			
				FB_Move_Top.PowerState:=st_Power;			
				FB_Move_Top.TopMove:=TRUE;				
				FB_Move_Top.TopPosition:=TopPositionNew;		
				FB_Move_Top.TopVelocity:=TopVelocityNew;		
				FB_Move_Top();								
				tm_state:=1;
			1:
				FB_Move_Top();
				LED_Run:=TRUE;
				IF NOT FB_Move_Top.TopDone THEN	
					tm_state:=1;
				ELSE					
					tm_state:=88;
				END_IF
			88:
				btn_TopMove:=FALSE;	
				LED_Run:=FALSE;
				tm_state:=0;
				TopBusy:=FALSE;
		END_CASE
END_IF

(*********************************************************************btn_BottomMove*****************************************************************)
IF btn_BottomMove THEN
		BottomBusy:=TRUE;
		CASE bm_state OF
			0:
				FB_Move_Bottom.Mode:=1;						
				FB_Move_Bottom.CoupleState:=st_Couple;			
				FB_Move_Bottom.PowerState:=st_Power;			
				FB_Move_Bottom.BottomMove:=TRUE;			
				FB_Move_Bottom.BottomPosition:=BottomPositionNew;		
				FB_Move_Bottom.BottomVelocity:=BottomVelocityNew;		
				FB_Move_Bottom();
				bm_state:=1;
			1:
				FB_Move_Bottom();
				IF NOT FB_Move_Bottom.BottomDone THEN
					LED_Run:=TRUE;
					bm_state:=1;
				ELSE
					bm_state:=88;
				END_IF
			88:
				BottomBusy:=FALSE;
				btn_TopMove:=FALSE;
				btn_BottomMove:=FALSE;
				bm_state:=0;
				LED_Run:=FALSE;
		END_CASE
END_IF
(*********************************************************************btn_TopMove*****************************************************************)
IF btn_InMove THEN
		InBusy:=TRUE;
		CASE im_state OF
			0:
				FB_Move_In.Mode:=1;						(*单梁模式*)
				FB_Move_In.CoupleState:=st_Couple;			
				FB_Move_In.PowerState:=st_Power;			
				FB_Move_In.InMove:=TRUE;				
				FB_Move_In.InPosition:=InPositionNew;		
				FB_Move_In.InVelocity:=InVelocityNew;		
				FB_Move_In();								
				im_state:=1;
			1:
				FB_Move_In();
				LED_Run:=TRUE;
				IF NOT FB_Move_In.InDone THEN	
					im_state:=1;
				ELSE					
					im_state:=88;
				END_IF
			88:
				btn_InMove:=FALSE;	
				LED_Run:=FALSE;
				im_state:=0;
				InBusy:=FALSE;
		END_CASE
END_IF

(*********************************************************************btn_BottomMove*****************************************************************)
IF btn_OutMove THEN
		OutBusy:=TRUE;
		CASE om_state OF
			0:
				FB_Move_Out.Mode:=1;						
				FB_Move_Out.CoupleState:=st_Couple;			
				FB_Move_Out.PowerState:=st_Power;			
				FB_Move_Out.OutMove:=TRUE;			
				FB_Move_Out.OutPosition:=OutPositionNew;		
				FB_Move_Out.OutVelocity:=OutVelocityNew;		
				FB_Move_Out();
				om_state:=1;
			1:
				FB_Move_Out();
				IF NOT FB_Move_Out.OutDone THEN
					LED_Run:=TRUE;
					om_state:=1;
				ELSE
					om_state:=88;
				END_IF
			88:
				OutBusy:=FALSE;
				btn_OutMove:=FALSE;
				om_state:=0;
				LED_Run:=FALSE;
		END_CASE
END_IF]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_SingleCarrierStop" Id="{520eb26f-2ad3-4864-baf8-9093a861faa1}">
      <Implementation>
        <ST><![CDATA[(*******************************************************************btn_TopStop********************************************************************)

IF btn_TopStop THEN
	LED_Run:=FALSE;
	FB_Move_Top.TopReset:=TRUE;
	TopBusy:=FALSE;
	FB_Move_Top();
	btn_TopMove:=FALSE;	
	tm_state:=0;
	CASE ts_state OF
			0:
				FB_Stop_Top.Mode:=1;
				FB_Stop_Top.CoupleState:=st_Couple;
				FB_Stop_Top.PowerState:=st_Power;
				FB_Stop_Top.TopStop:=TRUE;	
				FB_Stop_Top();	
				ts_state:=1;
			1:
				FB_Stop_Top();
				IF NOT FB_Stop_Top.TopDone THEN
					ts_state:=1;
				ELSE
					ts_state:=88;
				END_IF
			88:
				btn_TopStop:=FALSE;	
				FB_Move_Top.TopReset:=FALSE;	
				ts_state:=0;
		END_CASE
END_IF
(*******************************************************************btn_BottomStop********************************************************************)
IF btn_BottomStop  THEN
	LED_Run:=FALSE;
	BottomMoveIndicator:=0;
	FB_Move_Bottom.BottomReset:=TRUE;
	BottomBusy:=FALSE;
	FB_Move_Bottom();			
	btn_BottomMove:=FALSE;			
	bm_state:=0;							
	CASE bs_state OF
			0:
				FB_Stop_Bottom.Mode:=1;							
				FB_Stop_Bottom.CoupleState:=st_Couple;			
				FB_Stop_Bottom.PowerState:=st_Power;			
				FB_Stop_Bottom.BottomStop:=TRUE;				
				FB_Stop_Bottom();								
				bs_state:=1;
			1:
				FB_Stop_Bottom();
				IF NOT FB_Stop_Bottom.BottomDone THEN		
					bs_state:=1;
				ELSE									
					bs_state:=88;
				END_IF
			88:
				btn_BottomStop:=FALSE;					
				FB_Move_Bottom.BottomReset:=FALSE;				
				bs_state:=0;
		END_CASE
END_IF
(*******************************************************************btn_InStop********************************************************************)

IF btn_InStop THEN
	LED_Run:=FALSE;
	FB_Move_In.InReset:=TRUE;
	InBusy:=FALSE;
	FB_Move_In();
	btn_InMove:=FALSE;	
	im_state:=0;
	CASE is_state OF
			0:
				FB_Stop_In.Mode:=1;
				FB_Stop_In.CoupleState:=st_Couple;
				FB_Stop_In.PowerState:=st_Power;
				FB_Stop_In.InStop:=TRUE;	
				FB_Stop_In();	
				is_state:=1;
			1:
				FB_Stop_In();
				IF NOT FB_Stop_In.InDone THEN
					is_state:=1;
				ELSE
					is_state:=88;
				END_IF
			88:
				btn_InStop:=FALSE;	
				FB_Move_In.InReset:=FALSE;	
				is_state:=0;
		END_CASE
END_IF
(*******************************************************************btn_OutStop********************************************************************)
IF btn_OutStop  THEN
	LED_Run:=FALSE;
	OutMoveIndicator:=0;
	FB_Move_Out.OutReset:=TRUE;
	OutBusy:=FALSE;
	FB_Move_Out();			
	btn_OutMove:=FALSE;			
	om_state:=0;							
	CASE os_state OF
			0:
				FB_Stop_Out.Mode:=1;							
				FB_Stop_Out.CoupleState:=st_Couple;			
				FB_Stop_Out.PowerState:=st_Power;			
				FB_Stop_Out.OutStop:=TRUE;				
				FB_Stop_Out();								
				os_state:=1;
			1:
				FB_Stop_Out();
				IF NOT FB_Stop_Out.OutDone THEN		
					os_state:=1;
				ELSE									
					os_state:=88;
				END_IF
			88:
				btn_OutStop:=FALSE;					
				FB_Move_Out.OutReset:=FALSE;				
				os_state:=0;
		END_CASE
END_IF]]></ST>
      </Implementation>
    </Action>
    <LineIds Name="SingleCarrierMode">
      <LineId Id="35" Count="3" />
      <LineId Id="445" Count="2" />
      <LineId Id="444" Count="0" />
      <LineId Id="334" Count="13" />
      <LineId Id="51" Count="0" />
      <LineId Id="350" Count="0" />
      <LineId Id="52" Count="1" />
      <LineId Id="449" Count="0" />
      <LineId Id="448" Count="0" />
      <LineId Id="450" Count="0" />
      <LineId Id="198" Count="0" />
      <LineId Id="200" Count="7" />
    </LineIds>
    <LineIds Name="SingleCarrierMode.A_MonitoringAllAxis">
      <LineId Id="47" Count="0" />
      <LineId Id="49" Count="31" />
      <LineId Id="83" Count="31" />
      <LineId Id="82" Count="0" />
    </LineIds>
    <LineIds Name="SingleCarrierMode.A_PowerOff">
      <LineId Id="0" Count="13" />
      <LineId Id="39" Count="0" />
      <LineId Id="17" Count="6" />
      <LineId Id="25" Count="1" />
      <LineId Id="42" Count="2" />
      <LineId Id="41" Count="0" />
      <LineId Id="29" Count="4" />
      <LineId Id="35" Count="1" />
    </LineIds>
    <LineIds Name="SingleCarrierMode.A_PowerOn">
      <LineId Id="12" Count="28" />
      <LineId Id="51" Count="1" />
      <LineId Id="41" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="44" Count="4" />
    </LineIds>
    <LineIds Name="SingleCarrierMode.A_SingleCarrierMove">
      <LineId Id="2" Count="2" />
      <LineId Id="6" Count="27" />
      <LineId Id="35" Count="25" />
      <LineId Id="1" Count="0" />
      <LineId Id="70" Count="2" />
      <LineId Id="76" Count="28" />
      <LineId Id="108" Count="19" />
      <LineId Id="129" Count="3" />
      <LineId Id="69" Count="0" />
    </LineIds>
    <LineIds Name="SingleCarrierMode.A_SingleCarrierStop">
      <LineId Id="2" Count="3" />
      <LineId Id="7" Count="54" />
      <LineId Id="1" Count="0" />
      <LineId Id="63" Count="58" />
      <LineId Id="62" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>